lab: Brute-forcing a stay-logged-in cookie
lab: Offline password cracking

通过测试可以发现stay-in 这个cookie是可以直接访问到my-account的。那我们怎么去得到另外一个账号的stay-in cookie呢？
通过burp的Inspector可以发现，stay-in cookie的特点，base64 decode后得到用户名+一串看起来hash的字符
1. 通过xss漏洞获取stay-in cookie
2. 通过brute force的方式确认cookie的值
3. 是否可以直接修改用户名就可以访问了呢?


通过这个网站可以找到常见字符串的hash值
https://hashtoolkit.com/decrypt-hash/?hash=51dc30ddc473d43a6011e9ebba6ca770

我们来看看如何暴力破解得到cookie，因为我们知道stay-in cookie的特点如下：
  base64(用户名+hash(密码))
因为常用密码表是知道的，所以可以通过burp intruder的payload process加上这些规则来实现。因为正常的cookie是可以直接访问到my-account的信息的。

Lab: Password brute-force via password change
通过实验发现在修改密码的地方，如果输入正确的密码是返回200，但是如果输入错误的原始密码就会重定向到login页面。这里可以考虑用macro来解决这个问题，思路就是每次用账号A产生的cookie来给账号B尝试
。官方的solution就比较简单一些，利用的是两个新密码不一致，但是程序会先判断旧密码是否正确的特点来判断。

lab: Username enumeration via account lock
通过试验可以发现当我们给随意用户名的时候和随意密码，然后尝试7-8次都没有被锁，所以也就不用考虑IP block问题。题目要求是枚举用户名，说明如果用户名是正确的时候，它的消息应该是不一样的。所以自然
考虑用burp intruder来爆破用户名。
通过第一步爆破了用户名之后，我们就可以进一步爆破密码了，这个点是实际中也比较容易遇到的，就是虽然页面提示账号已经被锁了，但是只要你给正确的用户名和密码，它还是可以登录进去的。
