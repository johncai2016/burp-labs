lab: DOM-based cookie manipulation
1. 首先通过DOM Invader来辅助看看能不能自动帮我们定位到，发现在这个case走不通
2. 我们通过抓包看看，发现有不少的包里面会包含cookie叫lastViewedProduct。那我们就很奇怪这个cookie是怎么来的，也就是到底在哪个request设置的，用什么方式设置的呢?
通过追踪history 请求，发现是下面这个请求
GET /product?productId=1 HTTP/1.1
Host: 0a7000d503547d06c5ceb42c00a400e1.web-security-academy.net
Cookie: session=5QeirfhZHIcaZWxvqJMpqsDxihlT4lrS
查看response可以发现
                       <script>
                            document.cookie = 'lastViewedProduct=' + window.location + '; SameSite=None; Secure'
                        </script>
 到此我们可以知道lastViewedProduct是在什么时候设置的，通过什么方式设置的。
 
 而且我们发现设置的值会返回到页面中的Last viewed product链接，通过F2可以发现context是在属性里面，所以考虑用"闭合，然后看看能不能注入属性或者顺带逃逸>.
 <a href="https://0aaf00e303ff6ed3c3ef5158004800b7.web-security-academy.net/product?productId=1">Last viewed product</a>
但是通过测试可以发现，"会被转义，所以无法逃逸双引号的上下文。所以我们要考虑document.cookie来实现xss。

web message:
https://portswigger.net/web-security/dom-based/controlling-the-web-message-source


Lab: DOM XSS using web messages
还是选择用DOM Invader来辅助看看能不能定位到问题，发现在message tag会报以下问题
Detected message data inside potentially vulnerable element.innerHTML sink
通过DOM Invader的对于改问题的描述我们可以定位到有问题的地方
<script>
                        window.addEventListener('message', function(e) {
                            document.getElementById('ads').innerHTML = e.data;
                        })
                    </script>
 通过DOM Invader的Build POC即可完成。
 注意：这里有个困惑的地方就是我构造的payload用的是是<script> tag居然是通不过，最后看了solution是借助<img> tag。但其实我在exploit server上view exploit是可以弹出打印窗口的
 所以我的理解是这两种payload应该是可以的，只是没有贴近标准答案。

lab: DOM XSS using web messages and JSON.parse
还是选择用DOM Invader来辅助看看能不能定位到问题，发现在message tag会报以下问题
Detected message data inside potentially vulnerable iframe.src sink
看起来跟url有关，所以可以先考虑 javascript:window.print() 这个payload. 根据提示在DOM Invader尝试发送数据，发现可以弹出print.

 lab: Reflected DOM XSS
 DOM Invader还是挺好用的，根据提示可以知道是searchResult.js中的这个地方有问题。
   eval('var searchResultsObj = ' + this.responseText);
 按F2在Source tag这个地方找到searchResult.js下个断点可以发现
 通过输入'abc'然后debug到那个位置可以发现是 ""上下文，试着输入：abc"看看能否逃逸上下文，发现会被转义。
 这时候考虑加入转义字符：abc\",发现可以逃逸上下文。但是无法弹框。注意看是因为语法问题，可以考虑用comment来消除语法问题。
